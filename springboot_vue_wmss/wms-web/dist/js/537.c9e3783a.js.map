{"version":3,"file":"js/537.c9e3783a.js","mappings":"mJAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACJ,EAAIK,GAAG,UAAUH,EAAG,UAAU,CAACI,IAAI,YAAYF,YAAY,aAAaG,MAAM,CAAC,MAAQP,EAAIQ,UAAU,MAAQR,EAAIS,MAAM,cAAc,UAAU,CAACP,EAAG,eAAe,CAACK,MAAM,CAAC,MAAQ,KAAK,KAAO,OAAO,CAACL,EAAG,WAAW,CAACK,MAAM,CAAC,KAAO,OAAO,aAAe,MAAM,KAAO,QAAQ,YAAc,YAAYG,MAAM,CAACC,MAAOX,EAAIQ,UAAUI,GAAIC,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIQ,UAAW,KAAMM,EAAI,EAAEE,WAAW,mBAAmB,GAAGd,EAAG,eAAe,CAACK,MAAM,CAAC,KAAO,WAAW,MAAQ,OAAO,CAACL,EAAG,WAAW,CAACK,MAAM,CAAC,gBAAgB,GAAG,aAAe,MAAM,KAAO,QAAQ,KAAO,WAAW,YAAc,YAAYU,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAIA,EAAOC,KAAKC,QAAQ,QAAQpB,EAAIqB,GAAGH,EAAOI,QAAQ,QAAQ,GAAGJ,EAAOK,IAAI,SAAgB,KAAYvB,EAAIwB,QAAQC,MAAM,KAAMC,UAAU,GAAGhB,MAAM,CAACC,MAAOX,EAAIQ,UAAUmB,SAAUd,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIQ,UAAW,WAAYM,EAAI,EAAEE,WAAW,yBAAyB,GAAGd,EAAG,eAAe,CAACA,EAAG,YAAY,CAACK,MAAM,CAAC,KAAO,UAAU,SAAWP,EAAI4B,kBAAkBC,GAAG,CAAC,MAAQ7B,EAAIwB,UAAU,CAACxB,EAAIK,GAAG,SAAS,IAAI,IAAI,MACjwC,EACIyB,EAAkB,G,iDCqBtB,SACAC,KAAA,QACAC,KAAA,WACA,OACAJ,kBAAA,EACApB,UAAA,CACAI,GAAA,GACAe,SAAA,IAEAlB,MAAA,CACAG,GAAA,CACA,CAAAqB,UAAA,EAAAC,QAAA,QAAAC,QAAA,SAEAR,SAAA,CACA,CAAAM,UAAA,EAAAC,QAAA,QAAAC,QAAA,UAIA,EACAC,QAAA,CACAZ,QAAA,eAAAa,EAAA,KACA,KAAAT,kBAAA,EACA,KAAAU,MAAA9B,UAAA+B,UAAA,SAAAC,GACAA,EAEAC,EAAAA,EAAAC,KAAA,mCAAAL,EAAA7B,WACAmC,MAAA,SAAAC,GAAA,OAAAA,EAAAZ,IAAA,IACAW,MAAA,SAAAC,GACAC,QAAAC,IAAAF,GACA,MAAAA,EAAAG,MAEAC,eAAAC,QAAA,UAAAC,KAAAC,UAAAP,EAAAZ,OAEAK,EAAAe,QAAAC,QAAA,YAEAhB,EAAAT,kBAAA,EACA0B,MAAA,kBAEA,cACA,WACAjB,EAAAT,kBAAA,EACA0B,MAAA,YACA,KAEAjB,EAAAT,kBAAA,EACAiB,QAAAC,IAAA,QAEA,GACA,ICvEoP,I,eCQhPS,GAAY,OACd,EACAxD,EACA+B,GACA,EACA,KACA,WACA,MAIF,QAAeyB,EAAiB,O","sources":["webpack://wms-web/./src/components/login.vue","webpack://wms-web/src/components/login.vue","webpack://wms-web/./src/components/login.vue?61e5","webpack://wms-web/./src/components/login.vue?4dfc"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"loginBody\"},[_c('div',{staticClass:\"loginDiv\"},[_c('div',{staticClass:\"login-content\"},[_c('h1',{staticClass:\"login-title\"},[_vm._v(\"用户登录\")]),_c('el-form',{ref:\"loginForm\",staticClass:\"login-form\",attrs:{\"model\":_vm.loginForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"账号\",\"prop\":\"no\"}},[_c('el-input',{attrs:{\"type\":\"text\",\"autocomplete\":\"off\",\"size\":\"small\",\"placeholder\":\"Username\"},model:{value:(_vm.loginForm.no),callback:function ($$v) {_vm.$set(_vm.loginForm, \"no\", $$v)},expression:\"loginForm.no\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"password\",\"label\":\"密码\"}},[_c('el-input',{attrs:{\"show-password\":\"\",\"autocomplete\":\"off\",\"size\":\"small\",\"type\":\"password\",\"placeholder\":\"Password\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.confirm.apply(null, arguments)}},model:{value:(_vm.loginForm.password),callback:function ($$v) {_vm.$set(_vm.loginForm, \"password\", $$v)},expression:\"loginForm.password\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.confirm_disabled},on:{\"click\":_vm.confirm}},[_vm._v(\"确定\")])],1)],1)],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"loginBody\">\r\n    <div class=\"loginDiv\">\r\n      <div class=\"login-content\">\r\n        <h1 class=\"login-title\">用户登录</h1>\r\n        <el-form :model=\"loginForm\" ref=\"loginForm\" :rules=\"rules\" label-width=\"100px\" class=\"login-form\">\r\n          <el-form-item label=\"账号\" prop=\"no\">\r\n            <el-input type=\"text\" autocomplete=\"off\" size=\"small\" v-model=\"loginForm.no\" placeholder=\"Username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"password\" label=\"密码\">\r\n            <el-input v-model=\"loginForm.password\" show-password autocomplete=\"off\" size=\"small\" @keyup.enter.native=\"confirm\" type=\"password\" placeholder=\"Password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"confirm\" :disabled=\"confirm_disabled\">确定</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: \"login\",\r\n  data() {\r\n    return {\r\n      confirm_disabled: false,\r\n      loginForm: {\r\n        no: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        no: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    confirm() {\r\n      this.confirm_disabled = true;\r\n      this.$refs.loginForm.validate((valid) => {\r\n        if (valid) { // valid成功为true，失败为false\r\n          // 去后台验证用户名密码\r\n          axios.post('http://localhost:8090/user/login', this.loginForm)\r\n              .then(res => res.data)\r\n              .then(res => {\r\n                console.log(res);\r\n                if (res.code === 200) {\r\n                  // 存储\r\n                  sessionStorage.setItem(\"CurUser\", JSON.stringify(res.data));\r\n                  // 跳转到主页\r\n                  this.$router.replace('/Index');\r\n                } else {\r\n                  this.confirm_disabled = false;\r\n                  alert('校验失败，用户名或密码错误!');\r\n                }\r\n              })\r\n              .catch(() => {\r\n                this.confirm_disabled = false;\r\n                alert('请求失败，请重试!');\r\n              });\r\n        } else {\r\n          this.confirm_disabled = false;\r\n          console.log('校验失败');\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.loginBody {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #B3C0D1;\r\n}\r\n.loginDiv {\r\n  width: 33.33vw;\r\n  height: 60vh;\r\n  background: #fff;\r\n  border-radius: 5%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.login-title {\r\n  margin: 20px 0;\r\n  text-align: center;\r\n}\r\n.login-content {\r\n  width: 80%;\r\n  height: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./login.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./login.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./login.vue?vue&type=template&id=f3692a20&scoped=true\"\nimport script from \"./login.vue?vue&type=script&lang=js\"\nexport * from \"./login.vue?vue&type=script&lang=js\"\nimport style0 from \"./login.vue?vue&type=style&index=0&id=f3692a20&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f3692a20\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","ref","attrs","loginForm","rules","model","value","no","callback","$$v","$set","expression","nativeOn","$event","type","indexOf","_k","keyCode","key","confirm","apply","arguments","password","confirm_disabled","on","staticRenderFns","name","data","required","message","trigger","methods","_this","$refs","validate","valid","axios","post","then","res","console","log","code","sessionStorage","setItem","JSON","stringify","$router","replace","alert","component"],"sourceRoot":""}